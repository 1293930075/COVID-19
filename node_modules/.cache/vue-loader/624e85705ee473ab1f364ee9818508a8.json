{"remainingRequest":"/Users/liujie/Desktop/project/github/COVID-19/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liujie/Desktop/project/github/COVID-19/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liujie/Desktop/project/github/COVID-19/src/App.vue","mtime":1683262044662},{"path":"/Users/liujie/Desktop/project/github/COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liujie/Desktop/project/github/COVID-19/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liujie/Desktop/project/github/COVID-19/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liujie/Desktop/project/github/COVID-19/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBlY2hhcnRzIGZyb20gImVjaGFydHMiOwppbXBvcnQgImVjaGFydHMvbWFwL2pzL2NoaW5hIjsKaW1wb3J0IGpzb25wIGZyb20gImpzb25wIjsKLy8g5oyH5a6a5Zu+6KGo55qE6YWN572u6aG55ZKM5pWw5o2uCmNvbnN0IG9wdGlvbiA9IHsKICAgIHRpdGxlOiB7CiAgICAgICAgdGV4dDogIueWq+aDheaEn+afk+WIhuW4g+WbviIsCiAgICAgICAgbGluazogImh0dHBzOi8vZ2l0aHViLmNvbS8xMjkzOTMwMDc1L0NPVklELTE5IiwgLy8g5qCH6aKY6ZO+5o6lCiAgICAgICAgc3VidGV4dDogIueCueWHu+atpOWkhOi3s+i9rOiHs0dpdGh1YuS7k+W6k++8jOaVsOaNruadpea6kOS4jue9kee7nO+8jOS7heS+m+WtpuS5oOWPguiAg+OAgiIsCiAgICAgICAgc3VibGluazogImh0dHBzOi8vZ2l0aHViLmNvbS8xMjkzOTMwMDc1L0NPVklELTE5IiAvLyDmj4/ov7Dpk77mjqUKICAgIH0sCiAgICB0b29sdGlwOiB7CiAgICAgICAgdHJpZ2dlcjogIml0ZW0iCiAgICB9LAogICAgc2VyaWVzOiBbCiAgICAgICAgewogICAgICAgICAgICAvL+aOp+WItuaVsOaNruaYvuekugogICAgICAgICAgICBuYW1lOiAi56Gu6K+K5Lq65pWwIiwKICAgICAgICAgICAgdHlwZTogIm1hcCIsIC8vIOaYvuekuuexu+Wei+S4uuWcsOWbvgogICAgICAgICAgICBtYXA6ICJjaGluYSIsIC8vIOa4suafk+S4reWbveWcsOWbvgogICAgICAgICAgICB6b29tOiAxLjIsIC8vIOWcsOWbvue8qeaUvuWkp+WwjwogICAgICAgICAgICByb2FtOiB0cnVlLCAvLyDlhYHorrjmu5rova7nvKnmlL4KICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgIC8vIOaYvuekuuWcsOWbvuWMuuWfn+WQjeensOS7peWPiuiuvue9ruWtl+S9k+agt+W8jwogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgICAgIGNvbG9yOiAiIzMzMyIsCiAgICAgICAgICAgICAgICBmb250U2l6ZTogMTAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaXRlbVN0eWxlOiB7CiAgICAgICAgICAgICAgICAvLyDmjqfliLblnLDlm77ljLrln5/nur/mnaHpopzoibLvvIzlkozlnLDljLrpopzoibIKICAgICAgICAgICAgICAgIGFyZWFDb2xvcjogIiNlZWUiLAogICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICIjOTk5IgogICAgICAgICAgICB9LAogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgICAgLy8g5o6n5Yi26byg5qCH5YiS6L+H77yIaG92ZXLvvInmlLnlj5jlnLDlm77popzoibLlkozlrZfkvZPpopzoibIKICAgICAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJ3aGl0ZSIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICBhcmVhQ29sb3I6ICIjMDBhNGZmIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhOiBbXSAvL+eUqOadpeWxleekuuWQjuWPsOaVsOaNrgogICAgICAgIH0KICAgIF0sCiAgICB0b29sYm94OiB7CiAgICAgICAgLy8g5pi+56S65LiL6L29CiAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICBvcmllbnQ6ICJ2ZXJ0aWNhbCIsCiAgICAgICAgbGVmdDogInJpZ2h0IiwKICAgICAgICB0b3A6ICJib3R0b20iLAogICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgZGF0YVZpZXc6IHsgcmVhZE9ubHk6IGZhbHNlIH0sCiAgICAgICAgICAgIHJlc3RvcmU6IHt9LAogICAgICAgICAgICBzYXZlQXNJbWFnZToge30KICAgICAgICB9CiAgICB9LAogICAgdmlzdWFsTWFwOiBbCiAgICAgICAgewogICAgICAgICAgICAvLyDliIbmrrXmmL7npLoKICAgICAgICAgICAgdHlwZTogInBpZWNld2lzZSIsIC8vIOWIhuauteaYvuekugogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBzcGxpdE51bWJlcjogNiwgLy/mmL7npLrlpJrlsJHmrrXvvIzpu5jorqQ15q61CiAgICAgICAgICAgIHBpZWNlczogWwogICAgICAgICAgICAgICAgLy8g5q+P5q616IyD5Zu05pi+56S6CiAgICAgICAgICAgICAgICB7IG1pbjogMTAwMDAsIGxhYmVsOiAiPiAxMDAwMCDkuroiIH0sCiAgICAgICAgICAgICAgICB7IG1pbjogMTAwMCwgbWF4OiA5OTk5LCBsYWJlbDogIjEwMDAgLSA5OTk5IOS6uiIgfSwKICAgICAgICAgICAgICAgIHsgbWluOiA1MDAsIG1heDogOTk5LCBsYWJlbDogIjUwMCAtIDk5OSDkuroiIH0sCiAgICAgICAgICAgICAgICB7IG1pbjogMTAwLCBtYXg6IDQ5OSwgbGFiZWw6ICIxMDAgLSA0OTkg5Lq6IiB9LAogICAgICAgICAgICAgICAgeyBtaW46IDEwLCBtYXg6IDk5LCBsYWJlbDogIjEwIC0gOTkg5Lq6IiB9LAogICAgICAgICAgICAgICAgeyBtaW46IDEsIG1heDogOSwgbGFiZWw6ICIxIC0gOSDkuroiIH0KICAgICAgICAgICAgXSwKICAgICAgICAgICAgaW5SYW5nZTogeyAKICAgICAgICAgICAgICAgIHN5bWJvbDogInJlY3QiLCAvLyDliIbmrrXlvaLnirYg55+p5b2iCiAgICAgICAgICAgICAgICBjb2xvcjogWyAvLyDliIbmrrXoibLlgLwKICAgICAgICAgICAgICAgICAgICAiI2ZhYWEyYSIsCiAgICAgICAgICAgICAgICAgICAgIiNkNDNkMWUiLAogICAgICAgICAgICAgICAgICAgICIjYjQwMjAwIiwKICAgICAgICAgICAgICAgICAgICAiIzcwMDAwMCIsCiAgICAgICAgICAgICAgICAgICAgIiM0NzAxMDIiLAogICAgICAgICAgICAgICAgICAgICIjMGQwMTAwIgogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LAogICAgICAgICAgICAvLyDoibLlnZflpKflsI8KICAgICAgICAgICAgaXRlbVdpZHRoOiAyMCwKICAgICAgICAgICAgaXRlbUhlaWdodDogMTAKICAgICAgICAgICAgLy8gc2hvd0xhYmVsOmZhbHNlLAogICAgICAgICAgICAvLyBhbGlnbjoncmlnaHQnLCAvL+aOp+WItuiJsuWdl+S9jee9ru+8jOm7mOiupGxlZnQKICAgICAgICB9CiAgICBdCn07CmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJhYm91dCIsCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMuZ2V0TWFwRGF0YSgpOwogICAgICAgIHRoaXMuTXllY2hhcnRzID0gZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMubWFwQm94KTsKICAgICAgICB0aGlzLk15ZWNoYXJ0cy5zZXRPcHRpb24ob3B0aW9uKTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZ2V0TWFwRGF0YSgpIHsKICAgICAgICAgICAganNvbnAoCiAgICAgICAgICAgICAgICAiaHR0cHM6Ly9pbnRlcmZhY2Uuc2luYS5jbi9uZXdzL3dhcC9meW1hcDIwMjBfZGF0YS5kLmpzb24/Xz0xNTgwODkyNTIyNDI3IiwKICAgICAgICAgICAgICAgIHt9LAogICAgICAgICAgICAgICAgKGVyciwgZGF0YSkgPT4gewogICAgICAgICAgICAgICAgICAgIGlmICghZXJyKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBsaXN0ID0gZGF0YS5kYXRhLmxpc3QubWFwKGl0ZW0gPT4gKHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBpdGVtLnZhbHVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uLnNlcmllc1swXS5kYXRhID0gbGlzdDsKICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uLnRpdGxlLnRleHQgPSBgJHtkYXRhLmRhdGEudGltZXN955ar5oOF5oSf5p+T5YiG5biD5Zu+YDsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5NeWVjaGFydHMuc2V0T3B0aW9uKG9wdGlvbik7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApOwogICAgICAgIH0KICAgIH0KfTsK"},{"version":3,"sources":["App.vue"],"names":[],"mappingsfile":"App.vue","sourceRoot":"src","sourcesContent":["/**\n * @description:  2019 - 09 - 19 22: 29: 28\n * @return {*}\n */\n<template>\n    <div id=\"app\">\n        <div ref=\"mapBox\" style=\"width:100%;height:800px;margin:0 auto\"></div>\n    </div>\n</template>\n<script>\nimport echarts from \"echarts\";\nimport \"echarts/map/js/china\";\nimport jsonp from \"jsonp\";\n// 指定图表的配置项和数据\nconst option = {\n    title: {\n        text: \"疫情感染分布图\",\n        link: \"https://github.com/1293930075/COVID-19\", // 标题链接\n        subtext: \"点击此处跳转至Github仓库，数据来源与网络，仅供学习参考。\",\n        sublink: \"https://github.com/1293930075/COVID-19\" // 描述链接\n    },\n    tooltip: {\n        trigger: \"item\"\n    },\n    series: [\n        {\n            //控制数据显示\n            name: \"确诊人数\",\n            type: \"map\", // 显示类型为地图\n            map: \"china\", // 渲染中国地图\n            zoom: 1.2, // 地图缩放大小\n            roam: true, // 允许滚轮缩放\n            label: {\n                // 显示地图区域名称以及设置字体样式\n                show: true,\n                color: \"#333\",\n                fontSize: 10\n            },\n            itemStyle: {\n                // 控制地图区域线条颜色，和地区颜色\n                areaColor: \"#eee\",\n                borderColor: \"#999\"\n            },\n            emphasis: {\n                // 控制鼠标划过（hover）改变地图颜色和字体颜色\n                label: {\n                    color: \"white\"\n                },\n                itemStyle: {\n                    areaColor: \"#00a4ff\"\n                }\n            },\n            data: [] //用来展示后台数据\n        }\n    ],\n    toolbox: {\n        // 显示下载\n        show: true,\n        orient: \"vertical\",\n        left: \"right\",\n        top: \"bottom\",\n        feature: {\n            dataView: { readOnly: false },\n            restore: {},\n            saveAsImage: {}\n        }\n    },\n    visualMap: [\n        {\n            // 分段显示\n            type: \"piecewise\", // 分段显示\n            show: true,\n            splitNumber: 6, //显示多少段，默认5段\n            pieces: [\n                // 每段范围显示\n                { min: 10000, label: \"> 10000 人\" },\n                { min: 1000, max: 9999, label: \"1000 - 9999 人\" },\n                { min: 500, max: 999, label: \"500 - 999 人\" },\n                { min: 100, max: 499, label: \"100 - 499 人\" },\n                { min: 10, max: 99, label: \"10 - 99 人\" },\n                { min: 1, max: 9, label: \"1 - 9 人\" }\n            ],\n            inRange: { \n                symbol: \"rect\", // 分段形状 矩形\n                color: [ // 分段色值\n                    \"#faaa2a\",\n                    \"#d43d1e\",\n                    \"#b40200\",\n                    \"#700000\",\n                    \"#470102\",\n                    \"#0d0100\"\n                ]\n            },\n            // 色块大小\n            itemWidth: 20,\n            itemHeight: 10\n            // showLabel:false,\n            // align:'right', //控制色块位置，默认left\n        }\n    ]\n};\nexport default {\n    name: \"about\",\n    mounted() {\n        this.getMapData();\n        this.Myecharts = echarts.init(this.$refs.mapBox);\n        this.Myecharts.setOption(option);\n    },\n    methods: {\n        getMapData() {\n            jsonp(\n                \"https://interface.sina.cn/news/wap/fymap2020_data.d.json?_=1580892522427\",\n                {},\n                (err, data) => {\n                    if (!err) {\n                        let list = data.data.list.map(item => ({\n                            name: item.name,\n                            value: item.value\n                        }));\n                        option.series[0].data = list;\n                        option.title.text = `${data.data.times}疫情感染分布图`;\n                        this.Myecharts.setOption(option);\n                    }\n                }\n            );\n        }\n    }\n};\n</script>\n\n\n"]}]}